Experiment:
    name: main_loop
    class_name: cognitive_processes.main_loop.MainLoop
    new_executor: True
    threads: 2
    parameters: 
        iterations: 5000
        trials: 20
        subgoals: False
        softmax_selection: True
        softmax_temperature: 0.3
        kill_on_finish: True
Control:
    id: ltm_simulator
    control_topic: /main_loop/control
    control_msg: cognitive_processes_interfaces.msg.ControlMsg
    episodes_topic: /main_loop/episodes
    episodes_msg: cognitive_processes_interfaces.msg.Episode
    executed_policy_service: /emdb/simulator/executed_policy
    executed_policy_msg: cognitive_node_interfaces.srv.PolicyParametrized
    world_reset_service: /emdb/simulator/world_reset
    world_reset_msg: cognitive_processes_interfaces.srv.WorldReset
LTM:
    Files:
        -
            id: goodness
            class: core.file.FileGoodness
            file: goodness.txt
        -
            id: pnodes_success
            class: core.file.FilePNodesSuccess
            file: pnodes_success.txt
        -
            id: pnodes_content
            class: core.file.FilePNodesContent
            file: pnodes_content.txt
        -
            id: pnodes_content_last_iteration
            class: core.file.FileLastIterationPNodesContent
            file: pnodes_content_last_ite.txt
        -
            id: goals_content
            class: core.file.FileGoalsContent
            file: goals_content.txt
        -
            id: goals_content_last_iteration
            class: core.file.FileLastIterationGoalsContent
            file: goals_content_last_ite.txt
        -
            id: trials
            class: core.file.FileTrialsSuccess
            file: trials.txt
        -
            id: neighbors
            class: core.file.FileNeighbors
            file: neighbors.txt
        -
            id: neighbors_full
            class: core.file.FileNeighborsFull
            file: neighbors_full.txt
    Connectors:
        -
            data: Space
            default_class: cognitive_nodes.space.ANNSpace
        -
            data: Perception
            default_class: cognitive_nodes.perception.Perception
        -
            data: PNode
            default_class: cognitive_nodes.pnode.PNode
        -
            data: CNode
            default_class: cognitive_nodes.cnode.CNodeParameter
        -
            data: Goal
            default_class: cognitive_nodes.goal.GoalLearnedSpace
        -
            data: WorldModel
            default_class: cognitive_nodes.world_model.WorldModel
        -
            data: Policy
            default_class: cognitive_nodes.policy.PolicyBlocking

    Nodes:
        Perception:
            -
                name: panel_objects
                class_name: cognitive_nodes.perception.PumpPanelPerception
                parameters:
                    default_msg: simulators_interfaces.msg.PumpPanelListMsg
                    default_topic: /emdb/simulator/sensor/panel_objects
                    normalize_data:
                        voltage_min: 0.0
                        voltage_max: 232.5
                        output_flow_min: 0.0
                        output_flow_max: 12.0
                        tool_states: 3
                        v_states: 3
                        start_states: 3
        WorldModel:
            -
                name: PUMP_PANEL
                class_name: cognitive_nodes.world_model.WorldModel
        Need: 
            -
                name: start_pump_need
                class_name: cognitive_nodes.need.Need
                parameters:
                    weight: 1.0
                    drive_id: 'start_pump_drive'
                    need_type: 'Operational'
            - 
                name: llm_exploration_need
                class_name: cognitive_nodes.need.Need
                parameters:
                    weight: 0.1
                    drive_id: 'llm_exploration_drive'
                    need_type: 'Cognitive'
            - 
                name: effectance_need
                class_name: cognitive_nodes.need.Need
                parameters:
                    weight: 0.25
                    drive_id: 'effectance_drive'
                    need_type: 'Cognitive'
        Drive:
            -
                name: start_pump_drive
                class_name: cognitive_nodes.drive.DriveExponential
                parameters:
                    input_topic: /emdb/simulator/sensor/start_pump
                    input_msg: std_msgs.msg.Float32
                    min_eval: 0.8 
                    neighbors: [{"name": "start_pump_need", "node_type": "Need"}]
            -
                name: llm_exploration_drive
                class_name: cognitive_nodes.llm_exploration.DriveLLMExploration
                parameters:
                    neighbors: [{"name": "llm_exploration_need", "node_type": "Need"}]
            -
                name: effectance_drive
                class_name: cognitive_nodes.effectance.DriveEffectanceInternal
                parameters:
                    ltm_id: ltm_0
                    min_confidence: 0.84
                    limit_depth: False
                    neighbors: [{"name": "effectance_need", "node_type": "Need"}]
        Goal:
            -
                name: llm_exploration_goal
                class_name: cognitive_nodes.goal.GoalMotiven
                parameters:
                    neighbors: [{"name": "llm_exploration_drive", "node_type": "Drive"}]
            -
                name: effectance_goal
                class_name: dummy_nodes.dummy_goal.GoalDummy
                parameters:
                    neighbors: [{"name": "effectance_drive", "node_type": "Drive"}]
        PNode:
            -
                name: llm_exploration_pnode
                class_name: dummy_nodes.dummy_pnodes.ActivatedDummyPNode
                parameters:
                    space_class: cognitive_nodes.space.ActivatedDummySpace
            -
                name: effectance_pnode
                class_name: dummy_nodes.dummy_pnodes.ActivatedDummyPNode
                parameters:
                    space_class: cognitive_nodes.space.ActivatedDummySpace
        CNode:
            -
                name: llm_exploration_cnode
                class_name: cognitive_nodes.cnode.CNode
                parameters:
                    neighbors: [{"name": "llm_exploration_goal", "node_type": "Goal"}, {"name": "PUMP_PANEL", "node_type": "WorldModel"}, {"name": "llm_exploration_pnode", "node_type": "PNode"}]
            -
                name: effectance_cnode
                class_name: cognitive_nodes.cnode.CNode
                parameters:
                    neighbors: [{"name": "effectance_goal", "node_type": "Goal"}, {"name": "PUMP_PANEL", "node_type": "WorldModel"}, {"name": "effectance_pnode", "node_type": "PNode"}]

        Policy:
            -
                name: grasp_object
                class_name: cognitive_nodes.policy.PolicyBlockingParametrized
                parameters:
                    service_msg: cognitive_node_interfaces.srv.PolicyParametrized
                    service_name: /emdb/simulator/executed_policy
            -
                name: press_object
                class_name: cognitive_nodes.policy.PolicyBlockingParametrized
                parameters:
                    service_msg: cognitive_node_interfaces.srv.PolicyParametrized
                    service_name: /emdb/simulator/executed_policy
            -
                name: deliver_object
                class_name: cognitive_nodes.policy.PolicyBlocking
                parameters:
                    service_msg: cognitive_node_interfaces.srv.PolicyParametrized
                    service_name: /emdb/simulator/executed_policy
            -
                name: store_object
                class_name: cognitive_nodes.policy.PolicyBlocking
                parameters:
                    service_msg: cognitive_node_interfaces.srv.PolicyParametrized
                    service_name: /emdb/simulator/executed_policy  
            -
                name: llm_exploration_policy
                class_name: cognitive_nodes.llm_exploration.PolicyLLMExplorationPump
                parameters:
                    exclude_list: ["effectance_policy", "external_effect_policy", "prospection_policy"]
                    neighbors: [{"name": "llm_exploration_cnode", "node_type": "CNode"}]
                    model: "phi4:14b"
                    temperature: 0.1
                    num_predict: 28
                    max_episodes: 10
                    ltm_id: ltm_0
                    initial_prompts:
                    -   
                        role: "system"
                        content: |
                          A cognitive architecture is controlling a robot with one arm. You have to guide the cognitive architecture in the first steps to achieve the goal. The goal is: prepare the system and start the pump.
                          <Perceptions>
                          - discharge_light: 1 if the discharge light is on, 0 if off.
                          - emergency_button: 1 if the emergency button light is on, 0 if off.
                          - mode_selector: 1 if the mode selector is in manual mode, 0 if it is in automatic mode.
                          - off_button: 1 if the off button light is on, 0 if off.
                          - on_button: 1 if the on button light is on, 0 if off.
                          - output_flow_dial: A float from 0.0 to 1.0 representing the output flow level.
                          - start_button: 1 if the start button light is on, 0 if off.
                          - system_backup_light: 1 if the system backup light is on, 0 if off.
                          - test_light: 1 if the test light is on, 0 if off.
                          - tool_1: 0 if the tool is stored, 1 if the tool is grasped and 2 if the tool is delivered.
                          - tool_2: 0 if the tool is stored, 1 if the tool is grasped and 2 if the tool is delivered.
                          - v1_button: 1 if valve1 is opened, 0.5 if not. If 0.0, the button light is off.
                          - v2_button: 1 if valve2 is opened, 0.5 if not. If 0.0, the button light is off.
                          - v3_button: 1 if valve3 is opened, 0.5 if not. If 0.0, the button light is off.
                          - voltage_dial: A float from 0.0 to 1.0 representing the voltage of the system.
                          </Perceptions>

                          <Actions> 
                          - grasp_object(object): The robot grasps the specified object.
                          - store_object(None): The robot stores the object in its hand.
                          - deliver_object(None): The robot delivers to the human the object in its hand.
                          - press_object(object): The robot presses the specified object.
                          </Actions>

                          You will receive several messages, ordered chronologically, in YAML format with the last episodes (old_perception, policy_executed, parameter_used, current_perception, goal_reached). In the first step, you will only have available the current_perception.
                          The robot must determine the correct combination of controls to enable the system. Some controls may need to be activated in a specific order. Avoid repeating actions that do not cause significant changes.
                          You can do one action. The action must be in this format:
                          {"action": "press_object", "parameter": "on_button"}
                          If the action has no parameter:
                          {"action": "deliver_object", "parameter": None}
                          Only reply with one action in the specified format. No explanations. No extra text.

            -
                name: effectance_policy
                class_name: cognitive_nodes.effectance.PolicyEffectanceInternal
                parameters:
                    goal_class: cognitive_nodes.effectance.GoalActivatePNode
                    neighbors: [{"name": "effectance_cnode", "node_type": "CNode"}]
                    confidence: 0.5
                    threshold_delta: 0.5
                    limit_depth: False
                    ltm_id: ltm_0

DiscreteEventSimulator:
    Perceptions:
        -
            name: panel_objects
            perception_topic: /emdb/simulator/sensor/panel_objects
            perception_msg: simulators_interfaces.msg.PumpPanelListMsg
        -
            name: start_pump_goal
            perception_topic: /emdb/simulator/sensor/start_pump
            perception_msg: std_msgs.msg.Float32
